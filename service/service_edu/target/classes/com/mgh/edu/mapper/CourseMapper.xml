<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mgh.edu.mapper.CourseMapper">
    <resultMap id="courseInfoVoMapper" type="com.mgh.edu.entity.vo.CourseInfoVo">
        <id property="id" column="id" jdbcType="CHAR"/>
        <result property="teacherId" column="teacher_id" jdbcType="CHAR"/>
        <result property="subjectId" column="subject_id" jdbcType="CHAR"/>
        <result property="subjectParentId" column="subject_parent_id" jdbcType="CHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="DECIMAL"/>
        <result property="lessonNum" column="lesson_num" jdbcType="INTEGER"/>
        <result property="cover" column="cover" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <select id="getCourseInfo" resultMap="courseInfoVoMapper" parameterType="string">
        SELECT edu_course.id,
               teacher_id,
               subject_id,
               subject_parent_id,
               title,
               price,
               lesson_num,
               cover,
               description
        from edu_course
                 JOIN edu_course_description ON edu_course.id = edu_course_description.id AND edu_course.id = #{id};
    </select>
    <select id="getPublicInfo" resultType="com.mgh.edu.entity.vo.CoursePublicInfoVo" parameterType="string">
        SELECT c.id,
               c.title      title,
               c.price      price,
               c.cover      cover,
               c.lesson_num lesson_num,
               s.oneSubject oneSubjectTitle,
               s.twoSubject twoSubjectTitle,
               t.name       teacherName,
               ds.description
        FROM edu_course c
                 left JOIN (SELECT a.id, b.title oneSubject, a.title twoSubject
                            FROM edu_subject a
                                     JOIN edu_subject b ON a.parent_id = b.id) s ON c.subject_id = s.id
                 left join edu_teacher t on c.teacher_id = t.id
                 left join edu_course_description ds on c.id = ds.id
        where c.id = #{id};
    </select>
    <update id="updateStatusNormal" parameterType="string">
        update edu_course
        set status = 'Normal'
        where id = #{id};
    </update>
    <select id="getPageQuery" resultType="com.mgh.edu.entity.vo.CourseListVo"
            parameterType="com.mgh.edu.entity.vo.CourseQuery">
        SELECT c.id,
        c.title title,
        c.price price,
        c.cover cover,
        c.lesson_num lesson_num,
        t.name teacherName,
        c.gmt_create gmtCreate,
        c.status status,
        c.buy_count buyCount,
        c.view_count viewCount
        FROM edu_course c
        left join edu_teacher t on c.teacher_id = t.id
        <where>
            <if test="true">
                c.is_deleted = 0
            </if>
            <if test="query.title != null and query.title != ''">
                AND title LIKE
                '%${query.title}%'
            </if>
            <if test="query.teacherId != null and query.teacherId != ''">
                AND c.teacher_id = #{query.teacherId}
            </if>
            <if test="query.subjectParentId != null and query.subjectParentId != ''">
                AND c.subject_parent_id = #{query.subjectParentId}
            </if>
            <if test="query.subjectId != null and query.subjectId != ''">
                AND c.subject_id = #{query.subjectId}
            </if>
        </where>
    </select>

</mapper>
